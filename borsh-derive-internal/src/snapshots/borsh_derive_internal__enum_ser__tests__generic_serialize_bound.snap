---
source: borsh-derive-internal/src/enum_ser.rs
expression: pretty_print_syn_str(&actual).unwrap()
---
impl<T: Debug, U> borsh::ser::BorshSerialize for A<T, U>
where
    T: borsh::ser::BorshSerialize + PartialOrd,
    U: borsh::ser::BorshSerialize,
{
    fn serialize<W: borsh::__private::maybestd::io::Write>(
        &self,
        writer: &mut W,
    ) -> ::core::result::Result<(), borsh::__private::maybestd::io::Error> {
        let variant_idx: u8 = match self {
            A::C { .. } => 0,
            A::D(..) => 0 + 1,
        };
        writer.write_all(&variant_idx.to_le_bytes())?;
        match self {
            A::C { a, b, .. } => {
                borsh::BorshSerialize::serialize(a, writer)?;
                borsh::BorshSerialize::serialize(b, writer)?;
            }
            A::D(id0, id1) => {
                borsh::BorshSerialize::serialize(id0, writer)?;
                borsh::BorshSerialize::serialize(id1, writer)?;
            }
        }
        Ok(())
    }
}

